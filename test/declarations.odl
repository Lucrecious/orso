// integers
x: i32;
y: i64;
z := 5;

// floats
a: f32;
b: f64;
c := 5.0;

// bool
no: bool;
yes := true;

// string
str: string;
hello := "hello world";

// symbol
sym: symbol;
world := 'world';

// void
v: void;
u := null;

// function
main_function := main;
clock_function: () -> f32 = clock;

// pointers
xp := &x;
vp := &v;

// types
int := i32;
INT: type : i32; // can be used as type
new_int: INT = 5;

// union
name: string|void = "luca";



main :: () -> void {
    print_expr x;
    print_expr y;
    print_expr z;

    print_expr a;
    print_expr b;
    print_expr c;

    print_expr yes;
    print_expr no;

    print_expr str;
    print_expr hello;

    print_expr sym;
    print_expr world;

    print_expr v;
    print_expr u;

    print_expr main_function;
    print_expr clock_function;

    print_expr xp;
    print_expr vp;

    print int;
    print INT;
    print new_int;

    print name;
};

// output
x (i32) -> 0
y (i64) -> 0
z (i32) -> 5
a (f32) -> 0.0
b (f64) -> 0.0
c (f64) -> 5.0
yes (bool) -> true
no (bool) -> false
str (string) -> ""
hello (string) -> "hello"
sym (symbol) -> ''
world (symbol) -> 'world'
v (void) -> null
u (void) -> null
main_function (() -> void) -> ()->void{...}
clock_function (() -> f32) -> ()->f32{...}
xp (&i32) -> 0x00000000
vp (&void) -> 0x00000000
int (type) -> i32
INT (type) -> i32
new_int (type) -> i32
name (string|void) -> "luca"

